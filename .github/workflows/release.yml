on:
  release:
    types: [created]

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ryden.server
        IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
      run: |
        cd server
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: "Create, deploy ElasticBeanstalk application"
      id: build-app
      env:
        VERSION: ${{ steps.get_version.outputs.VERSION }}
      run: |
        mkdir ryden-server-app
        envsubt < server/Dockerrun.aws.json.template > ryden-server-app/Dockerrun.aws.json
        cd ryden-server-app
        zip ../ryden-server-app.zip -r .

    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v9
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: ryden
        environment_name: ryden-production
        version_label: ${{ steps.get_version.outputs.VERSION }}
        region: us-west-2
        deployment_package: ryden-server-app.zip
